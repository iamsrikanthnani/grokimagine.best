"use client";

import Link from "next/link";
import { useParams } from "next/navigation";
import { motion } from "framer-motion";
import { ArrowLeft, Heart } from "lucide-react";
import { useGetImagine } from "@/lib/query/get-imagine";
import { useLikeImagine } from "@/lib/query/like";
import FeedView from "@/components/FeedView";
import { useEffect, useState } from "react";
import { Button } from "@/components/ui/button";

export default function ImagineDetail() {
  const params = useParams<{ id: string }>();
  const id = params?.id;
  const { data } = useGetImagine(id);
  const like = useLikeImagine();
  const [liked, setLiked] = useState(false);

  useEffect(() => {
    if (!id) return;
    try {
      const likedKey = `liked:${id}`;
      setLiked(localStorage.getItem(likedKey) === "1");
    } catch {}
  }, [id]);

  if (!data) return null;
  const isVideo = data.mediaType === "video";

  return (
    <div className="min-h-screen p-4">
      <Button variant="outline" size="icon" className="cursor-pointer" asChild>
        <Link
          href="/"
          className="fixed top-4 left-4 bg-gray-900 rounded-full p-2 shadow-md border border-gray-800/50"
        >
          <ArrowLeft />
        </Link>
      </Button>

      <div className="max-w-2xl flex flex-col items-center justify-center mx-auto mt-16">
        <motion.div
          initial={{ opacity: 0, y: 50 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{
            type: "spring",
            stiffness: 150,
            damping: 25,
            mass: 0.5,
          }}
          className="border lg:h-full lg:w-[24vw] h-full w-[80vw] border-border/50 rounded-lg overflow-hidden bg-card/80 backdrop-blur-sm shadow-xl"
        >
          {isVideo ? (
            <video
              className="w-full rounded-lg"
              src={data.mediaUrl}
              controls
              playsInline
              muted
              autoPlay
              aria-label={`generated by grok imagine art contest Video by @${data.xHandle}`}
            />
          ) : (
            // eslint-disable-next-line @next/next/no-img-element
            <img
              className="w-full rounded-lg"
              src={data.mediaUrl}
              alt={`${data.prompt} generated by grok imagine art contest by @${data.xHandle}`}
            />
          )}
        </motion.div>

        <div className="lg:h-full lg:w-[24vw] h-full w-full mt-4 flex items-center justify-between">
          <motion.button
            onClick={() => {
              if (liked) return;
              try {
                localStorage.setItem(`liked:${data._id}`, "1");
              } catch {}
              setLiked(true);
              like.mutate(data._id);
            }}
            className="inline-flex items-center gap-2 disabled:opacity-90 disabled:cursor-not-allowed"
            aria-label="Like entry"
            whileTap={{ scale: 1.15 }}
            disabled={liked}
          >
            <Heart
              className={`w-5 h-5 ${
                liked ? "text-red-500 fill-red-500" : "text-orange-500"
              }`}
            />
            {data.likes}
          </motion.button>
          <div className="flex items-center gap-3 text-gray-400"></div>
          <Link
            href={`https://x.com/${data.xHandle}`}
            className="text-blue-400 hover:text-blue-300"
          >
            @{data.xHandle}
          </Link>
        </div>
        <div className="mt-4 text-base text-muted-foreground bg-muted/50 p-4 rounded-lg border border-border/50">
          {data.prompt}
        </div>
      </div>
      <FeedView random />
    </div>
  );
}
