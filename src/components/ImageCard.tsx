"use client";

import Link from "next/link";
import { motion } from "framer-motion";
import { Heart } from "lucide-react";
import { Card } from "@/components/ui/card";
import type { Imagine } from "@/types";
import { useLikeImagine } from "@/lib/query/like";
import { useEffect, useState } from "react";
import { Button } from "./ui/button";

type Props = {
  imagine: Imagine;
};

export function ImageCard({ imagine }: Props) {
  const like = useLikeImagine();
  const [liked, setLiked] = useState(false);
  const isVideo = imagine.mediaType === "video";

  useEffect(() => {
    try {
      const likedKey = `liked:${imagine._id}`;
      setLiked(localStorage.getItem(likedKey) === "1");
    } catch {}
  }, [imagine._id]);

  return (
    <motion.div
      layout
      initial={{ opacity: 0, y: 20, scale: 0.98 }}
      animate={{ opacity: 1, y: 0, scale: 1 }}
      transition={{ type: "spring", stiffness: 150, damping: 25, mass: 0.5 }}
      whileHover={{ scale: 1.03 }}
      whileTap={{ scale: 0.98 }}
    >
      <Card className="p-0 bg-black/80 backdrop-blur-md border border-gray-800/50 rounded-lg shadow-lg overflow-hidden">
        <div className="relative h-[36vh] md:h-[56vh] w-full">
          <Link
            href={`/${imagine._id}`}
            aria-label={`View ${imagine.prompt}`}
            className="block h-full"
          >
            {isVideo ? (
              <video
                className="absolute inset-0 w-full h-full object-cover"
                src={imagine.mediaUrl}
                muted
                loop
                playsInline
                autoPlay
                preload="metadata"
                onMouseEnter={(e) => {
                  try {
                    (e.currentTarget as HTMLVideoElement).play();
                  } catch {}
                }}
                onMouseLeave={(e) => {
                  const v = e.currentTarget as HTMLVideoElement;
                  try {
                    v.pause();
                    v.currentTime = 0;
                  } catch {}
                }}
                aria-label={`${imagine.prompt} - Best of Grok Imagine Video generated by @${imagine.xHandle}`}
              />
            ) : (
              // eslint-disable-next-line @next/next/no-img-element
              <img
                src={imagine.mediaUrl}
                alt={`${imagine.prompt} - Best of Grok Imagine generated by @${imagine.xHandle}`}
                loading="lazy"
                className="absolute inset-0 w-full h-full object-cover"
              />
            )}
          </Link>

          {/* Overlay icons bottom-right with individual glass buttons */}
          <div className="absolute bottom-2 right-2 z-10 flex items-center gap-2">
            <Button
              variant="outline"
              className="rounded-full cursor-pointer bg-black/50 backdrop-blur-md border border-gray-800/50 shadow-lg"
              asChild
            >
              <motion.button
                onClick={() => {
                  if (liked) return;
                  try {
                    localStorage.setItem(`liked:${imagine._id}`, "1");
                  } catch {}
                  setLiked(true);
                  like.mutate(imagine._id);
                }}
                aria-label="Like entry"
                whileTap={{ scale: 1.15 }}
                transition={{ type: "spring", stiffness: 300, damping: 20 }}
                disabled={liked}
                className="disabled:opacity-90 disabled:cursor-not-allowed"
                aria-pressed={liked}
              >
                {imagine.likes}{" "}
                <Heart
                  className={`w-5 h-5 ${
                    liked ? "text-red-500 fill-red-500" : ""
                  }`}
                />
              </motion.button>
            </Button>
            <Button
              variant="outline"
              size="icon"
              className="rounded-full cursor-pointer bg-black/50 backdrop-blur-md border border-gray-800/50 shadow-lg"
              asChild
            >
              <Link
                href={`https://x.com/${encodeURIComponent(imagine.xHandle)}`}
                target="_blank"
                aria-label={`Open X profile ${imagine.xHandle}`}
              >
                <svg
                  width="16"
                  height="16"
                  viewBox="0 0 300 300.251"
                  fill="currentColor"
                  version="1.1"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M178.57 127.15 290.27 0h-26.46l-97.03 110.38L89.34 0H0l117.13 166.93L0 300.25h26.46l102.4-116.59 81.8 116.59h89.34M36.01 19.54H76.66l187.13 262.13h-40.66"
                    className="text-white"
                  />
                </svg>
              </Link>
            </Button>
          </div>
          {/* Bottom gradient to enhance glass effect (5% height, 50% opacity) */}
          <div className="absolute inset-x-0 bottom-0 h-[16%] bg-gradient-to-t from-black/50 to-transparent" />
        </div>
        {/* No prompt footer as per request: image-only with overlay icons */}
      </Card>
    </motion.div>
  );
}

export default ImageCard;
